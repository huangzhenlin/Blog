import comp from "E:/前端/github/Blog/docs/.vuepress/.temp/pages/interview/JavaScript.html.vue"
const data = JSON.parse("{\"path\":\"/interview/JavaScript.html\",\"title\":\"\",\"lang\":\"en-US\",\"frontmatter\":{},\"headers\":[{\"level\":2,\"title\":\"JavaScript数据类型\",\"slug\":\"javascript数据类型\",\"link\":\"#javascript数据类型\",\"children\":[]},{\"level\":2,\"title\":\"数据类型的检测方式\",\"slug\":\"数据类型的检测方式\",\"link\":\"#数据类型的检测方式\",\"children\":[]},{\"level\":2,\"title\":\"null 和 undefined 区别\",\"slug\":\"null-和-undefined-区别\",\"link\":\"#null-和-undefined-区别\",\"children\":[]},{\"level\":2,\"title\":\"数字精度丢失问题\",\"slug\":\"数字精度丢失问题\",\"link\":\"#数字精度丢失问题\",\"children\":[]},{\"level\":2,\"title\":\"JavaScript 中的类型转换机制\",\"slug\":\"javascript-中的类型转换机制\",\"link\":\"#javascript-中的类型转换机制\",\"children\":[]},{\"level\":2,\"title\":\"Object.is() 、“===”、“==” 的区别\",\"slug\":\"object-is-、-、-的区别\",\"link\":\"#object-is-、-、-的区别\",\"children\":[]},{\"level\":2,\"title\":\"如何判断一个对象是空对象\",\"slug\":\"如何判断一个对象是空对象\",\"link\":\"#如何判断一个对象是空对象\",\"children\":[]},{\"level\":2,\"title\":\"对象创建的方式\",\"slug\":\"对象创建的方式\",\"link\":\"#对象创建的方式\",\"children\":[]},{\"level\":2,\"title\":\"JavaScript 中的包装类型\",\"slug\":\"javascript-中的包装类型\",\"link\":\"#javascript-中的包装类型\",\"children\":[]},{\"level\":2,\"title\":\"字符串常用的方法\",\"slug\":\"字符串常用的方法\",\"link\":\"#字符串常用的方法\",\"children\":[]},{\"level\":2,\"title\":\"数组常用的方法\",\"slug\":\"数组常用的方法\",\"link\":\"#数组常用的方法\",\"children\":[]},{\"level\":2,\"title\":\"对原型、原型链的理解\",\"slug\":\"对原型、原型链的理解\",\"link\":\"#对原型、原型链的理解\",\"children\":[]},{\"level\":2,\"title\":\"对 this 对象的理解\",\"slug\":\"对-this-对象的理解\",\"link\":\"#对-this-对象的理解\",\"children\":[]},{\"level\":2,\"title\":\"对象继承的方式有哪些\",\"slug\":\"对象继承的方式有哪些\",\"link\":\"#对象继承的方式有哪些\",\"children\":[]},{\"level\":2,\"title\":\"对闭包的理解\",\"slug\":\"对闭包的理解\",\"link\":\"#对闭包的理解\",\"children\":[]},{\"level\":2,\"title\":\"对new操作符的理解\",\"slug\":\"对new操作符的理解\",\"link\":\"#对new操作符的理解\",\"children\":[]},{\"level\":2,\"title\":\"bind、call、apply 区别\",\"slug\":\"bind、call、apply-区别\",\"link\":\"#bind、call、apply-区别\",\"children\":[]},{\"level\":2,\"title\":\"对浅拷贝和深拷贝的理解\",\"slug\":\"对浅拷贝和深拷贝的理解\",\"link\":\"#对浅拷贝和深拷贝的理解\",\"children\":[]},{\"level\":2,\"title\":\"对节流和防抖的理解\",\"slug\":\"对节流和防抖的理解\",\"link\":\"#对节流和防抖的理解\",\"children\":[]},{\"level\":2,\"title\":\"对函数式编程的理解\",\"slug\":\"对函数式编程的理解\",\"link\":\"#对函数式编程的理解\",\"children\":[]},{\"level\":2,\"title\":\"对尾调用的理解\",\"slug\":\"对尾调用的理解\",\"link\":\"#对尾调用的理解\",\"children\":[]},{\"level\":2,\"title\":\"对伪数组的理解\",\"slug\":\"对伪数组的理解\",\"link\":\"#对伪数组的理解\",\"children\":[]},{\"level\":2,\"title\":\"ES6 模块与 CommonJS 模块的异同\",\"slug\":\"es6-模块与-commonjs-模块的异同\",\"link\":\"#es6-模块与-commonjs-模块的异同\",\"children\":[]},{\"level\":2,\"title\":\"let 、const 和 var的区别\",\"slug\":\"let-、const-和-var的区别\",\"link\":\"#let-、const-和-var的区别\",\"children\":[]},{\"level\":2,\"title\":\"const 对象的属性可以修改吗\",\"slug\":\"const-对象的属性可以修改吗\",\"link\":\"#const-对象的属性可以修改吗\",\"children\":[]},{\"level\":2,\"title\":\"扩展运算符的作用及使用场景\",\"slug\":\"扩展运算符的作用及使用场景\",\"link\":\"#扩展运算符的作用及使用场景\",\"children\":[]},{\"level\":2,\"title\":\"对for-of 的理解\",\"slug\":\"对for-of-的理解\",\"link\":\"#对for-of-的理解\",\"children\":[]},{\"level\":2,\"title\":\"for...in 和 for...of 的区别\",\"slug\":\"for-in-和-for-of-的区别\",\"link\":\"#for-in-和-for-of-的区别\",\"children\":[]},{\"level\":2,\"title\":\"属性的遍历\",\"slug\":\"属性的遍历\",\"link\":\"#属性的遍历\",\"children\":[]},{\"level\":2,\"title\":\"Map、Set、Object 和 Array的区别\",\"slug\":\"map、set、object-和-array的区别\",\"link\":\"#map、set、object-和-array的区别\",\"children\":[]},{\"level\":2,\"title\":\"异步编程的实现方式\",\"slug\":\"异步编程的实现方式\",\"link\":\"#异步编程的实现方式\",\"children\":[]},{\"level\":2,\"title\":\"对Proxy 的理解\",\"slug\":\"对proxy-的理解\",\"link\":\"#对proxy-的理解\",\"children\":[]},{\"level\":2,\"title\":\"对 Promise 的理解\",\"slug\":\"对-promise-的理解\",\"link\":\"#对-promise-的理解\",\"children\":[]},{\"level\":2,\"title\":\"对 async/await 的理解\",\"slug\":\"对-async-await-的理解\",\"link\":\"#对-async-await-的理解\",\"children\":[]},{\"level\":2,\"title\":\"对ES6中 Decorator 的理解\",\"slug\":\"对es6中-decorator-的理解\",\"link\":\"#对es6中-decorator-的理解\",\"children\":[]},{\"level\":2,\"title\":\"什么是 DOM\",\"slug\":\"什么是-dom\",\"link\":\"#什么是-dom\",\"children\":[]},{\"level\":2,\"title\":\"什么是BOM\",\"slug\":\"什么是bom\",\"link\":\"#什么是bom\",\"children\":[]},{\"level\":2,\"title\":\"对 AJAX 的理解\",\"slug\":\"对-ajax-的理解\",\"link\":\"#对-ajax-的理解\",\"children\":[]},{\"level\":2,\"title\":\"ajax、axios、fetch 的区别\",\"slug\":\"ajax、axios、fetch-的区别\",\"link\":\"#ajax、axios、fetch-的区别\",\"children\":[]},{\"level\":2,\"title\":\"对浏览器事件的理解\",\"slug\":\"对浏览器事件的理解\",\"link\":\"#对浏览器事件的理解\",\"children\":[]},{\"level\":2,\"title\":\"onload和DOMContentLoaded的区别\",\"slug\":\"onload和domcontentloaded的区别\",\"link\":\"#onload和domcontentloaded的区别\",\"children\":[]},{\"level\":2,\"title\":\"JavaScript 脚本延迟加载的方式\",\"slug\":\"javascript-脚本延迟加载的方式\",\"link\":\"#javascript-脚本延迟加载的方式\",\"children\":[]},{\"level\":2,\"title\":\"escape、encodeURI、encodeURIComponent 的区别\",\"slug\":\"escape、encodeuri、encodeuricomponent-的区别\",\"link\":\"#escape、encodeuri、encodeuricomponent-的区别\",\"children\":[]},{\"level\":2,\"title\":\"如何判断一个元素是否在可视区域中\",\"slug\":\"如何判断一个元素是否在可视区域中\",\"link\":\"#如何判断一个元素是否在可视区域中\",\"children\":[]},{\"level\":2,\"title\":\"正则表达式\",\"slug\":\"正则表达式\",\"link\":\"#正则表达式\",\"children\":[]},{\"level\":2,\"title\":\"对 JSON 的理解\",\"slug\":\"对-json-的理解\",\"link\":\"#对-json-的理解\",\"children\":[]},{\"level\":2,\"title\":\"哪些情况会导致内存泄漏\",\"slug\":\"哪些情况会导致内存泄漏\",\"link\":\"#哪些情况会导致内存泄漏\",\"children\":[]},{\"level\":2,\"title\":\"垃圾回收算法\",\"slug\":\"垃圾回收算法\",\"link\":\"#垃圾回收算法\",\"children\":[]},{\"level\":2,\"title\":\"设计模式\",\"slug\":\"设计模式\",\"link\":\"#设计模式\",\"children\":[]}],\"git\":{},\"filePathRelative\":\"interview/JavaScript.md\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
